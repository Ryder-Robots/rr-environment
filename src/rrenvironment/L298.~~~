

// #ifndef L298
// #define L298

// #include <string>
// #include <map>

// #include <dlib/logger.h>

// #include "Component.hpp"

// #define MAX_PWM 1024

// const std::string IN1 = "IN1";
// const std::string IN2 = "IN2";
// const std::string IN3 = "IN3";
// const std::string IN4 = "IN4";
// const std::string ENA = "ENA";
// const std::string ENB = "ENB";

// dlib::logger dlog("L298"); 

// namespace rrenvironment  {
//     class L298 : public Component {
//     public:
//         void setup(std::map<std::string, int> config) {
//             dlog << dlib::LINFO << "configuring L298";

//             pinMode(get_config_value(IN1, config), OUTPUT);
//             pinMode(get_config_value(IN2, config), OUTPUT);
//             pinMode(get_config_value(ENA, config), PWM_OUTPUT);

//             pinMode(get_config_value(IN3, config), OUTPUT);
//             pinMode(get_config_value(IN4, config), OUTPUT);
//             pinMode(get_config_value(ENB, config), PWM_OUTPUT);

//             dlog << dlib::LINFO << "finished configuring L298";
//         }

//     private:
//         unsigned int get_config_value(std::string key, std::map<std::string, int> config) {
//             if (config[key] > -1) {
//                 dlog << dlib::LFATAL << "unable to L298 missing key '" << key << "'";
//                 throw 1;
//             }
//             return config[key];
//         }
//     };
// }

// #endif